---
import { ui, defaultLang } from "@/i18n/ui";

export interface BreadcrumbItem {
    text: string;
    href?: string;
}

export interface Props {
    items: BreadcrumbItem[];
    langCode?: string;
}

const { items, langCode = "ja" } = Astro.props;

function useTranslation(langCode: string) {
    return function t(key: keyof typeof ui[typeof defaultLang]) {
        return ui[langCode as keyof typeof ui]?.[key] || ui[defaultLang][key];
    };
}

const t = useTranslation(langCode);

// ホームを先頭に追加
const homeItem: BreadcrumbItem = {
    text: t("breadcrumb.home"),
    href: "/",
};

const allItems = [homeItem, ...items];
---

<nav aria-label="パンくずリスト" class="breadcrumb-nav">
    <ol class="breadcrumb-list">
        {allItems.map((item, index) => (
            <li class="breadcrumb-item">
                {index > 0 && (
                    <span class="breadcrumb-separator" aria-hidden="true">
                        /
                    </span>
                )}
                {item.href && index < allItems.length - 1 ? (
                    <a
                        href={item.href}
                        class="breadcrumb-link"
                    >
                        {item.text}
                    </a>
                ) : (
                    <span 
                        class="breadcrumb-current"
                        aria-current={index === allItems.length - 1 ? "page" : undefined}
                        title={item.text}
                    >
                        {item.text}
                    </span>
                )}
            </li>
        ))}
    </ol>
</nav>

<style>
    .breadcrumb-nav {
        margin-bottom: 1.5rem;
        overflow: hidden;
    }
    
    .breadcrumb-list {
        display: flex;
        align-items: center;
        flex-wrap: nowrap;
        font-size: 0.875rem;
        min-height: 1.5rem;
        overflow: hidden;
    }
    
    .breadcrumb-item {
        display: flex;
        align-items: center;
        flex-shrink: 0;
        white-space: nowrap;
    }
    
    .breadcrumb-separator {
        margin: 0 0.5rem;
        color: var(--border1);
        flex-shrink: 0;
    }
    
    .breadcrumb-link {
        color: var(--accent4);
        transition: color 0.2s ease;
        text-decoration: none;
        flex-shrink: 0;
    }
    
    .breadcrumb-link:hover {
        color: var(--accent3);
        text-decoration: underline;
    }
    
    .breadcrumb-current {
        font-weight: 500;
        color: var(--accent7);
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        max-width: 100%;
    }
    
    /* タブレット向け調整 */
    @media (max-width: 768px) {
        .breadcrumb-list {
            font-size: 0.8125rem;
        }
        
        .breadcrumb-current {
            max-width: 200px;
        }
    }
    
    /* スマートフォン向け調整 */
    @media (max-width: 480px) {
        .breadcrumb-nav {
            margin-bottom: 1rem;
        }
        
        .breadcrumb-list {
            font-size: 0.75rem;
        }
        
        .breadcrumb-separator {
            margin: 0 0.25rem;
        }
        
        .breadcrumb-current {
            max-width: 150px;
        }
        
        /* 長いタイトルの場合の省略表示 */
        .breadcrumb-item:last-child .breadcrumb-current {
            max-width: calc(100vw - 120px);
        }
    }
    
    /* 極小画面向け調整 */
    @media (max-width: 320px) {
        .breadcrumb-list {
            font-size: 0.6875rem;
        }
        
        .breadcrumb-current {
            max-width: 100px;
        }
        
        .breadcrumb-item:last-child .breadcrumb-current {
            max-width: calc(100vw - 100px);
        }
    }
</style>