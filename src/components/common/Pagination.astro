---
import { ui, defaultLang } from "@/i18n/ui";

export interface Props {
    currentPage: number;
    totalPages: number;
    basePath: string;
    langCode?: string;
}

const { currentPage, totalPages, basePath, langCode = "ja" } = Astro.props;

function getPageUrl(page: number): string {
    if (page === 1) {
        return basePath;
    }
    return `${basePath}/page/${page}`;
}

function useTranslation(langCode: string) {
    return function t(key: keyof typeof ui[typeof defaultLang]) {
        return ui[langCode as keyof typeof ui]?.[key] || ui[defaultLang][key];
    };
}

const t = useTranslation(langCode);
const prevPage = currentPage > 1 ? currentPage - 1 : null;
const nextPage = currentPage < totalPages ? currentPage + 1 : null;
---

{totalPages > 1 && (
    <nav class="flex justify-center items-center space-x-3 mt-8 px-4" aria-label="ページネーション">
        <!-- 前のページボタン -->
        {prevPage ? (
            <a
                href={getPageUrl(prevPage)}
                class="flex-shrink-0 px-3 py-2 border rounded-md transition-colors duration-200 text-sm sm:text-base"
                style="background-color: var(--bg2); border-color: var(--border1); color: var(--accent4);"
                onmouseover="this.style.backgroundColor='var(--bg3)'"
                onmouseout="this.style.backgroundColor='var(--bg2)'"
                aria-label={`${t("pagination.page")} ${prevPage}`}
            >
                ← {t("pagination.prev")}
            </a>
        ) : (
            <span class="flex-shrink-0 px-3 py-2 border rounded-md cursor-not-allowed text-sm sm:text-base"
                  style="background-color: var(--bg3); border-color: var(--border1); color: var(--shadow1);">
                ← {t("pagination.prev")}
            </span>
        )}

        <!-- 現在のページ情報 -->
        <div class="flex-shrink-0 px-4 py-2 rounded-md font-medium text-white text-sm sm:text-base"
             style="background-color: var(--accent1);"
             aria-current="page">
            {currentPage} / {totalPages}
        </div>

        <!-- 次のページボタン -->
        {nextPage ? (
            <a
                href={getPageUrl(nextPage)}
                class="flex-shrink-0 px-3 py-2 border rounded-md transition-colors duration-200 text-sm sm:text-base"
                style="background-color: var(--bg2); border-color: var(--border1); color: var(--accent4);"
                onmouseover="this.style.backgroundColor='var(--bg3)'"
                onmouseout="this.style.backgroundColor='var(--bg2)'"
                aria-label={`${t("pagination.page")} ${nextPage}`}
            >
                {t("pagination.next")} →
            </a>
        ) : (
            <span class="flex-shrink-0 px-3 py-2 border rounded-md cursor-not-allowed text-sm sm:text-base"
                  style="background-color: var(--bg3); border-color: var(--border1); color: var(--shadow1);">
                {t("pagination.next")} →
            </span>
        )}
    </nav>
)}