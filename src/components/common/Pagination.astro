---
import { ui, defaultLang } from "@/i18n/ui";

export interface Props {
    currentPage: number;
    totalPages: number;
    basePath: string;
    langCode?: string;
}

const { currentPage, totalPages, basePath, langCode = "ja" } = Astro.props;

function getPageUrl(page: number): string {
    if (page === 1) {
        return basePath;
    }
    return `${basePath}/page/${page}`;
}

function useTranslation(langCode: string) {
    return function t(key: keyof typeof ui[typeof defaultLang]) {
        return ui[langCode as keyof typeof ui]?.[key] || ui[defaultLang][key];
    };
}

const t = useTranslation(langCode);
const prevPage = currentPage > 1 ? currentPage - 1 : null;
const nextPage = currentPage < totalPages ? currentPage + 1 : null;
---

{totalPages > 1 && (
    <nav class="flex justify-center items-center space-x-2 mt-8" aria-label="ページネーション">
        <!-- 前のページボタン -->
        {prevPage ? (
            <a
                href={getPageUrl(prevPage)}
                class="px-4 py-2 border rounded-md transition-colors duration-200"
                style="background-color: var(--bg2); border-color: var(--border1); color: var(--accent4);"
                onmouseover="this.style.backgroundColor='var(--bg3)'"
                onmouseout="this.style.backgroundColor='var(--bg2)'"
                aria-label={`${t("pagination.page")} ${prevPage}`}
            >
                {t("pagination.prev")}
            </a>
        ) : (
            <span class="px-4 py-2 border rounded-md cursor-not-allowed"
                  style="background-color: var(--bg3); border-color: var(--border1); color: var(--shadow1);">
                {t("pagination.prev")}
            </span>
        )}

        <!-- ページ番号 -->
        <div class="flex items-center space-x-1">
            {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
                page === currentPage ? (
                    <span
                        class="px-3 py-2 rounded-md font-medium text-white"
                        style="background-color: var(--accent1);"
                        aria-current="page"
                    >
                        {page}
                    </span>
                ) : (
                    <a
                        href={getPageUrl(page)}
                        class="px-3 py-2 border rounded-md transition-colors duration-200"
                        style="background-color: var(--bg2); border-color: var(--border1); color: var(--accent4);"
                        onmouseover="this.style.backgroundColor='var(--bg3)'"
                        onmouseout="this.style.backgroundColor='var(--bg2)'"
                        aria-label={`${t("pagination.page")} ${page}`}
                    >
                        {page}
                    </a>
                )
            ))}
        </div>

        <!-- 次のページボタン -->
        {nextPage ? (
            <a
                href={getPageUrl(nextPage)}
                class="px-4 py-2 border rounded-md transition-colors duration-200"
                style="background-color: var(--bg2); border-color: var(--border1); color: var(--accent4);"
                onmouseover="this.style.backgroundColor='var(--bg3)'"
                onmouseout="this.style.backgroundColor='var(--bg2)'"
                aria-label={`${t("pagination.page")} ${nextPage}`}
            >
                {t("pagination.next")}
            </a>
        ) : (
            <span class="px-4 py-2 border rounded-md cursor-not-allowed"
                  style="background-color: var(--bg3); border-color: var(--border1); color: var(--shadow1);">
                {t("pagination.next")}
            </span>
        )}
    </nav>
)}