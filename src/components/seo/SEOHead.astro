---
import type { SEOProps } from '@/lib/seo';
import { generateSEOProps, generateHreflangLinks } from '@/lib/seo';

interface Props extends SEOProps {}

const seoData = generateSEOProps(Astro.props);
const hreflangLinks = generateHreflangLinks(seoData.alternateLocales);
---

<!-- Basic Meta Tags -->
<title>{seoData.title}</title>
<meta name="description" content={seoData.description} />
<link rel="canonical" href={seoData.canonical} />

<!-- Open Graph -->
<meta property="og:type" content={seoData.openGraph.type} />
<meta property="og:title" content={seoData.openGraph.title} />
<meta property="og:description" content={seoData.openGraph.description} />
<meta property="og:url" content={seoData.openGraph.url} />
<meta property="og:image" content={seoData.openGraph.image} />
<meta property="og:site_name" content={seoData.openGraph.siteName} />
<meta property="og:locale" content={seoData.openGraph.locale} />

<!-- Twitter Card -->
<meta name="twitter:card" content={seoData.twitter.card} />
<meta name="twitter:title" content={seoData.twitter.title} />
<meta name="twitter:description" content={seoData.twitter.description} />
<meta name="twitter:image" content={seoData.twitter.image} />

<!-- Article Meta (if type is article) -->
{seoData.article && (
  <>
    {seoData.article.publishedTime && (
      <meta property="article:published_time" content={seoData.article.publishedTime} />
    )}
    {seoData.article.modifiedTime && (
      <meta property="article:modified_time" content={seoData.article.modifiedTime} />
    )}
    {seoData.article.author && (
      <meta property="article:author" content={seoData.article.author} />
    )}
    {seoData.article.section && (
      <meta property="article:section" content={seoData.article.section} />
    )}
    {seoData.article.tags && seoData.article.tags.map(tag => (
      <meta property="article:tag" content={tag} />
    ))}
  </>
)}

<!-- Hreflang Links -->
{hreflangLinks.map(link => (
  <link rel={link.rel} hreflang={link.hreflang} href={link.href} />
))}