---
import type { CollectionEntry } from "astro:content";
import { getAggregatedData } from "@/lib/collections/data";
import ItemCountList from "@/components/blog/ItemCountList.astro";

type SupportedCollectionEntry =
    | CollectionEntry<"blog_ja">
    | CollectionEntry<"blog_en">
    | CollectionEntry<"blog_ko">;

interface Props {
    allBlogPosts: SupportedCollectionEntry[];
    langCode: "ja" | "en" | "ko";
    archiveLabel: string;
    categoryLabel: string;
    tagLabel: string;
}

const { allBlogPosts, langCode, archiveLabel, categoryLabel, tagLabel } =
    Astro.props;

const {
    archives,
    categories,
    tags,
}: {
    archives: Record<string, number>;
    categories: Record<string, number>;
    tags: Record<string, number>;
} = getAggregatedData(allBlogPosts);

const sortedCategories: [string, number][] = Object.entries(categories).sort(
    (a: [string, number], b: [string, number]) => {
        if (b[1] === a[1]) return a[0].localeCompare(b[0]);
        return b[1] - a[1];
    }
);

const sortedArchives: [string, number][] = Object.entries(archives).sort(
    (a: [string, number], b: [string, number]) => {
        return parseInt(b[0], 10) - parseInt(a[0], 10);
    }
);

const sortedTags: [string, number][] = Object.entries(tags).sort(
    (a: [string, number], b: [string, number]) => {
        if (b[1] === a[1]) return a[0].localeCompare(b[0]);
        return b[1] - a[1];
    }
);
---

<div class="mt-16">
    <h2 class="text-3xl font-bold my-8">{archiveLabel}</h2>
    <ItemCountList
        items={sortedArchives}
        baseUrl={`/blog/${langCode}/archives`}
    />

    <h2 class="text-3xl font-bold my-8">{categoryLabel}</h2>
    <ItemCountList
        items={sortedCategories}
        baseUrl={`/blog/${langCode}/categories`}
    />
    <h2 class="text-3xl font-bold my-8">{tagLabel}</h2>
    <ItemCountList items={sortedTags} baseUrl={`/blog/${langCode}/tags`} />
</div>
