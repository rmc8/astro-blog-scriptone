---
import Footer from "@/components/common/Footer.astro";
import Header from "@/components/common/Header.astro";
import SEOHead from "@/components/seo/SEOHead.astro";

// クエリパラメータを取得
const url = new URL(Astro.request.url);
const code = url.searchParams.get('code');
const state = url.searchParams.get('state');
const error = url.searchParams.get('error');
const error_description = url.searchParams.get('error_description');

// Error handling
let statusMessage = '';
let statusType: 'success' | 'error' | 'loading' = 'loading';

if (error) {
    statusType = 'error';
    statusMessage = error_description || `Authentication error: ${error}`;
} else if (code) {
    statusType = 'success';
    statusMessage = 'Authentication completed. Redirecting to app...';
} else {
    statusType = 'error';
    statusMessage = 'Authentication code not found.';
}
---

<!doctype html>
<html lang="en">
    <head>
        <SEOHead
            title="moodeSky OAuth Authentication"
            description="moodeSky OAuth Authentication Callback"
            url="/moodesky/oauth/callback"
            type="website"
        />
    </head>

    <body>
        <Header />
        
        <main class="oauth-callback-main">
            <div class="oauth-callback-container">
                <div class="oauth-callback-card">
                    <div class="oauth-callback-icon">
                        {statusType === 'success' && <i class="material-icons success-icon">check_circle</i>}
                        {statusType === 'error' && <i class="material-icons error-icon">error</i>}
                        {statusType === 'loading' && <i class="material-icons loading-icon">hourglass_empty</i>}
                    </div>
                    
                    <h1 class="oauth-callback-title">moodeSky OAuth Authentication</h1>
                    
                    <div class={`oauth-callback-message ${statusType}`}>
                        <p>{statusMessage}</p>
                    </div>

                    {statusType === 'success' && (
                        <div class="oauth-callback-details">
                            <p class="redirect-message">
                                If the app doesn't open automatically, please open the app manually.
                            </p>
                        </div>
                    )}

                    {statusType === 'error' && (
                        <div class="oauth-callback-actions">
                            <button class="retry-button" onclick="window.history.back()">
                                Go Back
                            </button>
                        </div>
                    )}
                </div>
            </div>
        </main>

        <Footer />

        <script define:vars={{ code, state, error, statusType }}>
            // モバイルアプリへのリダイレクト処理
            if (statusType === 'success' && code) {
                const redirectUrl = `mooodysky://oauth/callback?code=${encodeURIComponent(code)}${state ? `&state=${encodeURIComponent(state)}` : ''}`;
                
                console.log('Redirecting to app:', redirectUrl);
                
                // モバイルアプリへのリダイレクトを試行
                window.location.href = redirectUrl;
                
                // フォールバック: 3秒後にWebページを閉じる（デスクトップブラウザ対応）
                setTimeout(() => {
                    try {
                        if (window.opener) {
                            // ポップアップウィンドウの場合
                            window.close();
                        } else {
                            // 通常のウィンドウの場合、履歴を戻る
                            window.history.back();
                        }
                    } catch (e) {
                        console.log('Window operation failed:', e);
                        // Last resort: prompt manual operation
                        document.querySelector('.redirect-message').innerHTML = 
                            'If the app does not open, please close the browser tab and open the app manually.';
                    }
                }, 3000);
            }
        </script>
    </body>
</html>

<style>
    .oauth-callback-main {
        min-height: calc(100vh - 5rem);
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
        background-color: var(--bg1);
    }

    .oauth-callback-container {
        width: 100%;
        max-width: 500px;
    }

    .oauth-callback-card {
        background: var(--bg2);
        border-radius: 16px;
        padding: 3rem 2rem;
        text-align: center;
        box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.1);
        border: 1px solid var(--border1);
        max-width: 500px;
        width: 100%;
    }

    .oauth-callback-icon {
        margin-bottom: 2rem;
    }

    .oauth-callback-icon i {
        font-size: 4rem;
        display: block;
    }

    .success-icon {
        color: var(--accent1);
        animation: pulse 2s infinite;
    }

    .error-icon {
        color: #f44336;
    }

    .loading-icon {
        color: var(--accent1);
        animation: spin 2s linear infinite;
    }

    .oauth-callback-title {
        font-size: 1.75rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        color: var(--accent7);
    }

    .oauth-callback-message {
        margin-bottom: 2rem;
    }

    .oauth-callback-message p {
        font-size: 1.125rem;
        margin: 0;
        line-height: 1.6;
    }

    .oauth-callback-message.success {
        color: var(--accent3);
    }

    .oauth-callback-message.error {
        color: #f44336;
    }

    .oauth-callback-message.loading {
        color: var(--accent1);
    }

    .oauth-callback-details {
        background: var(--bg3);
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 1.5rem;
        border: 1px solid var(--border2);
    }

    .redirect-message {
        font-size: 0.875rem;
        color: var(--accent4);
        margin: 0;
    }

    .oauth-callback-actions {
        display: flex;
        justify-content: center;
        gap: 1rem;
    }

    .retry-button {
        background: var(--accent1);
        color: white;
        border: none;
        border-radius: 8px;
        padding: 0.75rem 2rem;
        font-size: 1rem;
        font-weight: 500;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .retry-button:hover {
        background: var(--accent3);
    }

    @keyframes pulse {
        0%, 100% {
            opacity: 1;
        }
        50% {
            opacity: 0.5;
        }
    }

    @keyframes spin {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }

    @media (max-width: 640px) {
        .oauth-callback-main {
            padding: 1rem;
        }

        .oauth-callback-card {
            padding: 2rem 1.5rem;
        }

        .oauth-callback-title {
            font-size: 1.5rem;
        }

        .oauth-callback-icon i {
            font-size: 3rem;
        }
    }

    @media (max-width: 480px) {
        .oauth-callback-card {
            padding: 1.5rem 1rem;
        }

        .oauth-callback-title {
            font-size: 1.25rem;
        }
    }
</style>