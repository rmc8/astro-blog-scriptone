---
import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import Layout from "@/layouts/Base.astro";
import Article from "@/components/blog/Article.astro";
import { getRelatedPosts } from "@/lib/collections/related";
import { getPostNavigation } from "@/lib/collections/navigation";
import type { SEOProps } from "@/lib/seo";

interface Props {
    singleBlog: CollectionEntry<"blog_ja">;
}

export const getStaticPaths: GetStaticPaths = async () => {
    const allBlogs = await getCollection("blog_ja");
    const pathData = allBlogs.map((singleBlog) => ({
        params: {
            slug: singleBlog.slug,
        },
        props: {
            singleBlog: singleBlog,
        },
    }));
    return pathData;
};

const LANG_CODE = "ja";
const { singleBlog } = Astro.props;
const { Content, headings } = await singleBlog.render();
const allBlogs = await getCollection("blog_ja");
const relatedPosts = getRelatedPosts(singleBlog, allBlogs, 6);
const { prevPost, nextPost } = getPostNavigation(singleBlog, allBlogs);

// SEO props for multilingual support
const currentUrl = `/blog/${LANG_CODE}/${singleBlog.slug}`;

// パンくずリストデータ
const breadcrumbItems = [
    { name: 'ホーム', url: '/', position: 1 },
    { name: 'ブログ', url: `/blog/${LANG_CODE}`, position: 2 },
    { name: singleBlog.data.title, position: 3 }
];

const seoProps: SEOProps = {
    title: singleBlog.data.title,
    description: singleBlog.data.description,
    url: currentUrl,
    type: 'article',
    publishedTime: singleBlog.data.date,
    modifiedTime: singleBlog.data.updatedDate,
    author: 'Scriptone',
    section: singleBlog.data.categories?.[0],
    tags: singleBlog.data.tags,
    locale: LANG_CODE,
    alternateLocales: [
        { locale: 'ja', url: `/blog/ja/${singleBlog.slug}` },
        { locale: 'en', url: `/blog/en/${singleBlog.slug}` },
        { locale: 'ko', url: `/blog/ko/${singleBlog.slug}` }
    ],
    breadcrumbItems
};
---

<Layout
    title=`${singleBlog.data.title} - Scriptone`
    description={singleBlog.data.description}
    seoProps={seoProps}
>
    <Article
        LANG_CODE={LANG_CODE}
        Content={Content}
        headings={headings}
        singleBlog={singleBlog}
        relatedPosts={relatedPosts}
        allBlogPosts={allBlogs}
        prevPost={prevPost}
        nextPost={nextPost}
    />
</Layout>
